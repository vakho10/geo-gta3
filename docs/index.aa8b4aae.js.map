{"mappings":"AAAAA,OAAOC,iBAAiB,QAAM,KAC1B,MAAMC,EAAW,IAAKF,OAAOG,cAAgBH,OAAOI,oBAC9CC,EAAWH,EAASI,aAC1BD,EAASE,KAAKC,MAAQ,GACtBH,EAASI,QAAQP,EAASQ,aAC1B,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAO,+BAChBF,EAAIG,aAAe,cACnBH,EAAIV,iBAAiB,QAAM,KACvBC,EAASa,gBAAgBJ,EAAIK,UAAUC,MAAMC,IACzC,IAAIC,EAASjB,EAASkB,qBACtBD,EAAOE,OAASH,EAChBC,EAAOV,QAAQJ,GACfc,EAAOG,MAAO,EACdH,EAAOI,QACPC,UAAUN,SAGlBP,EAAIc","sources":["src/js/bg-audio-loop.js"],"sourcesContent":["window.addEventListener('load', () => {\r\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n    const gainNode = audioCtx.createGain();\r\n    gainNode.gain.value = 0.4; // setting it to 40%\r\n    gainNode.connect(audioCtx.destination);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', '/geo-gta3/audio/bg-loop.mp3');\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.addEventListener('load', () => {\r\n        audioCtx.decodeAudioData(xhr.response).then((audioBuffer) => {\r\n            let source = audioCtx.createBufferSource();\r\n            source.buffer = audioBuffer;\r\n            source.connect(gainNode);\r\n            source.loop = true;\r\n            source.start();\r\n            playsound(audioBuffer);\r\n        });\r\n    });\r\n    xhr.send();\r\n});"],"names":["window","addEventListener","audioCtx","AudioContext","webkitAudioContext","gainNode","createGain","gain","value","connect","destination","xhr","XMLHttpRequest","open","responseType","decodeAudioData","response","then","audioBuffer","source","createBufferSource","buffer","loop","start","playsound","send"],"version":3,"file":"index.aa8b4aae.js.map"}