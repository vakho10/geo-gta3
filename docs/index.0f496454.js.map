{"mappings":"kpBAsBA,IAAuBA,EACDC,mFArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,2IC8CzD,IAAoBC,+CA5CpB,IAAIC,EAAY,YA6BPC,EAAWC,GAClB,OAAQ,GAAKA,GAAKC,QAAO,wCAA0C,MAAQ,IAc7EJ,WA1C4BP,GAC1B,IAAIY,EAAQJ,EAAUR,GAOtB,OALKY,IACHA,aAQF,IACE,MAAM,IAAIV,MACV,MAAOW,GACP,IAAIC,GAAW,GAAKD,EAAIE,OAAOC,MAAK,kCAEpC,GAAIF,EAGF,OAAOL,EAAWK,EAAQ,IAI9B,MAAO,IApBGG,GACRT,EAAUR,GAAMY,GAGXA,MCZTM,EAAiBf,EAAA,SAAAgB,aAA6C,SAAWhB,EAAA,SAAAiB,QAA6C,SCGtHC,OAAOC,iBAAiB,QAAM,KAC1B,MAAMC,EAAW,IAAKF,OAAOG,cAAgBH,OAAOI,oBAC9CC,EAAWH,EAASI,aAC1BD,EAASE,KAAKhB,MAAQ,IACtBc,EAASG,QAAQN,EAASO,aAC1B,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAOC,EAAAhB,IAChBa,EAAII,aAAe,cACnBJ,EAAIT,iBAAiB,QAAM,KAEvBC,EAASa,gBAAgBL,EAAIM,UAAUC,MAAMC,IACzC,IAAIC,EAASjB,EAASkB,qBACtBD,EAAOE,OAASH,EAChBC,EAAOX,QAAQH,GACfc,EAAOG,MAAO,EACdH,EAAOI,cAGfb,EAAIc","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-91a8c516e40a2f6f.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-f948a22a55c4a6db.js","src/js/bg-audio-loop.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fEfL9\\\":\\\"index.0f496454.js\\\",\\\"3J5SR\\\":\\\"bg-loop.0423fc18.mp3\\\"}\"));","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('fEfL9') + require('./helpers/bundle-manifest').resolve(\"3J5SR\");","import bgAudio from 'url:../audio/bg-loop.mp3';\r\n// const bgAudio = require('../audio/bg-loop.mp3');\r\n\r\nwindow.addEventListener('load', () => {\r\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n    const gainNode = audioCtx.createGain();\r\n    gainNode.gain.value = 0.35; // setting it to 35%\r\n    gainNode.connect(audioCtx.destination);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', bgAudio);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.addEventListener('load', () => {\r\n    // fetch(bgAudio).then(response => {\r\n        audioCtx.decodeAudioData(xhr.response).then((audioBuffer) => {\r\n            let source = audioCtx.createBufferSource();\r\n            source.buffer = audioBuffer;\r\n            source.connect(gainNode);\r\n            source.loop = true;\r\n            source.start();\r\n        });\r\n    });\r\n    xhr.send();\r\n});"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$b8ec9acca77a94a8$exports","getBundleURL","resolve","window","addEventListener","audioCtx","AudioContext","webkitAudioContext","gainNode","createGain","gain","connect","destination","xhr","XMLHttpRequest","open","$parcel$interopDefault","responseType","decodeAudioData","response","then","audioBuffer","source","createBufferSource","buffer","loop","start","send"],"version":3,"file":"index.0f496454.js.map"}